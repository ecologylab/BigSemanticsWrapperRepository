package ecologylab.bigsemantics.generated.library.commodity.service;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.commodity.service.RestaurantGenre;
import ecologylab.bigsemantics.generated.library.commodity.service.Service;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class Restaurant extends Service
{
	/** 
	 *Price range of the restaurant
	 */ 
	@simpl_scalar
	private MetadataString priceRange;

	/** 
	 *The genres of food offered.
	 */ 
	@simpl_collection("restaurant_genre")
	@mm_name("genres")
	private List<RestaurantGenre> genres;

	public Restaurant()
	{ super(); }

	public Restaurant(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	priceRange()
	{
		MetadataString	result = this.priceRange;
		if (result == null)
		{
			result = new MetadataString();
			this.priceRange = result;
		}
		return result;
	}

	public String getPriceRange()
	{
		return this.priceRange == null ? null : priceRange().getValue();
	}

	public MetadataString getPriceRangeMetadata()
	{
		return priceRange;
	}

	public void setPriceRange(String priceRange)
	{
		if (priceRange != null)
			this.priceRange().setValue(priceRange);
	}

	public void setPriceRangeMetadata(MetadataString priceRange)
	{
		this.priceRange = priceRange;
	}

	public List<RestaurantGenre> getGenres()
	{
		return genres;
	}

  // lazy evaluation:
  public List<RestaurantGenre> genres()
  {
    if (genres == null)
      genres = new ArrayList<RestaurantGenre>();
    return genres;
  }

  // addTo:
  public void addToGenres(RestaurantGenre element)
  {
    genres().add(element);
  }

  // size:
  public int genresSize()
  {
    return genres == null ? 0 : genres.size();
  }

	public void setGenres(List<RestaurantGenre> genres)
	{
		this.genres = genres;
	}
}
