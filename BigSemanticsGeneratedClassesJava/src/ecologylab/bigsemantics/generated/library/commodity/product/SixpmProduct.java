package ecologylab.bigsemantics.generated.library.commodity.product;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.commodity.product.Product;
import ecologylab.bigsemantics.generated.library.commodity.product.SixpmProduct;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class SixpmProduct extends Product
{
	@simpl_scalar
	private MetadataString color;

	@simpl_collection("sixpm_product")
	@mm_name("associated_products")
	private List<SixpmProduct> associatedProducts;

	public SixpmProduct()
	{ super(); }

	public SixpmProduct(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	color()
	{
		MetadataString	result = this.color;
		if (result == null)
		{
			result = new MetadataString();
			this.color = result;
		}
		return result;
	}

	public String getColor()
	{
		return this.color == null ? null : color().getValue();
	}

	public MetadataString getColorMetadata()
	{
		return color;
	}

	public void setColor(String color)
	{
		if (color != null)
			this.color().setValue(color);
	}

	public void setColorMetadata(MetadataString color)
	{
		this.color = color;
	}

	public List<SixpmProduct> getAssociatedProducts()
	{
		return associatedProducts;
	}

  // lazy evaluation:
  public List<SixpmProduct> associatedProducts()
  {
    if (associatedProducts == null)
      associatedProducts = new ArrayList<SixpmProduct>();
    return associatedProducts;
  }

  // addTo:
  public void addToAssociatedProducts(SixpmProduct element)
  {
    associatedProducts().add(element);
  }

  // size:
  public int associatedProductsSize()
  {
    return associatedProducts == null ? 0 : associatedProducts.size();
  }

	public void setAssociatedProducts(List<SixpmProduct> associatedProducts)
	{
		this.associatedProducts = associatedProducts;
	}
}
