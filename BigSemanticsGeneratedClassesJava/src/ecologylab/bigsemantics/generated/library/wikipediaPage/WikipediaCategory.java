package ecologylab.bigsemantics.generated.library.wikipediaPage;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.wikipediaPage.WikipediaCategory;
import ecologylab.bigsemantics.generated.library.wikipediaPage.WikipediaPage;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class WikipediaCategory extends RichDocument
{
	@simpl_collection("wikipedia_category")
	@mm_name("subcategories")
	private List<WikipediaCategory> subcategories;

	@simpl_collection("wikipedia_page")
	@mm_name("articles")
	private List<WikipediaPage> articles;

	@simpl_collection("wikipedia_category")
	@mm_name("supercategories")
	private List<WikipediaCategory> supercategories;

	public WikipediaCategory()
	{ super(); }

	public WikipediaCategory(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<WikipediaCategory> getSubcategories()
	{
		return subcategories;
	}

  // lazy evaluation:
  public List<WikipediaCategory> subcategories()
  {
    if (subcategories == null)
      subcategories = new ArrayList<WikipediaCategory>();
    return subcategories;
  }

  // addTo:
  public void addToSubcategories(WikipediaCategory element)
  {
    subcategories().add(element);
  }

  // size:
  public int subcategoriesSize()
  {
    return subcategories == null ? 0 : subcategories.size();
  }

	public void setSubcategories(List<WikipediaCategory> subcategories)
	{
		this.subcategories = subcategories;
	}

	public List<WikipediaPage> getArticles()
	{
		return articles;
	}

  // lazy evaluation:
  public List<WikipediaPage> articles()
  {
    if (articles == null)
      articles = new ArrayList<WikipediaPage>();
    return articles;
  }

  // addTo:
  public void addToArticles(WikipediaPage element)
  {
    articles().add(element);
  }

  // size:
  public int articlesSize()
  {
    return articles == null ? 0 : articles.size();
  }

	public void setArticles(List<WikipediaPage> articles)
	{
		this.articles = articles;
	}

	public List<WikipediaCategory> getSupercategories()
	{
		return supercategories;
	}

  // lazy evaluation:
  public List<WikipediaCategory> supercategories()
  {
    if (supercategories == null)
      supercategories = new ArrayList<WikipediaCategory>();
    return supercategories;
  }

  // addTo:
  public void addToSupercategories(WikipediaCategory element)
  {
    supercategories().add(element);
  }

  // size:
  public int supercategoriesSize()
  {
    return supercategories == null ? 0 : supercategories.size();
  }

	public void setSupercategories(List<WikipediaCategory> supercategories)
	{
		this.supercategories = supercategories;
	}
}
