package ecologylab.bigsemantics.generated.library.creativeWork.reddit;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.blogPost.Post;
import ecologylab.bigsemantics.generated.library.creativeWork.reddit.RedditComments;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class RedditPostData extends Post
{
	@simpl_scalar
	private MetadataString flair;

	@simpl_scalar
	private MetadataString postKarma;

	@simpl_composite
	@mm_name("post_content")
	private RichDocument postContent;

	@simpl_composite
	@mm_name("comments")
	private RedditComments comments;

	public RedditPostData()
	{ super(); }

	public RedditPostData(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	flair()
	{
		MetadataString	result = this.flair;
		if (result == null)
		{
			result = new MetadataString();
			this.flair = result;
		}
		return result;
	}

	public String getFlair()
	{
		return this.flair == null ? null : flair().getValue();
	}

	public MetadataString getFlairMetadata()
	{
		return flair;
	}

	public void setFlair(String flair)
	{
		if (flair != null)
			this.flair().setValue(flair);
	}

	public void setFlairMetadata(MetadataString flair)
	{
		this.flair = flair;
	}

	public MetadataString	postKarma()
	{
		MetadataString	result = this.postKarma;
		if (result == null)
		{
			result = new MetadataString();
			this.postKarma = result;
		}
		return result;
	}

	public String getPostKarma()
	{
		return this.postKarma == null ? null : postKarma().getValue();
	}

	public MetadataString getPostKarmaMetadata()
	{
		return postKarma;
	}

	public void setPostKarma(String postKarma)
	{
		if (postKarma != null)
			this.postKarma().setValue(postKarma);
	}

	public void setPostKarmaMetadata(MetadataString postKarma)
	{
		this.postKarma = postKarma;
	}

	public RichDocument getPostContent()
	{
		return postContent;
	}

	public void setPostContent(RichDocument postContent)
	{
		this.postContent = postContent;
	}

	public RedditComments getComments()
	{
		return comments;
	}

	public void setComments(RedditComments comments)
	{
		this.comments = comments;
	}
}
