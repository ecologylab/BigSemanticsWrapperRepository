package ecologylab.bigsemantics.generated.library.creativeWork.publication;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.publication.BasicPublication;
import ecologylab.bigsemantics.generated.library.creativeWork.publication.Subject;
import ecologylab.bigsemantics.generated.library.creativeWork.publication.TermType;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *A publication.
 */ 
@simpl_inherit
public class Publication extends BasicPublication
{
	@simpl_scalar
	private MetadataString pages;

	@simpl_collection("subject")
	@mm_name("subjects")
	private List<Subject> subjects;

	@simpl_scalar
	private MetadataString aboutTheAuthors;

	@simpl_collection("term_type")
	@mm_name("common_terms")
	private List<TermType> commonTerms;

	public Publication()
	{ super(); }

	public Publication(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	pages()
	{
		MetadataString	result = this.pages;
		if (result == null)
		{
			result = new MetadataString();
			this.pages = result;
		}
		return result;
	}

	public String getPages()
	{
		return this.pages == null ? null : pages().getValue();
	}

	public MetadataString getPagesMetadata()
	{
		return pages;
	}

	public void setPages(String pages)
	{
		if (pages != null)
			this.pages().setValue(pages);
	}

	public void setPagesMetadata(MetadataString pages)
	{
		this.pages = pages;
	}

	public List<Subject> getSubjects()
	{
		return subjects;
	}

  // lazy evaluation:
  public List<Subject> subjects()
  {
    if (subjects == null)
      subjects = new ArrayList<Subject>();
    return subjects;
  }

  // addTo:
  public void addToSubjects(Subject element)
  {
    subjects().add(element);
  }

  // size:
  public int subjectsSize()
  {
    return subjects == null ? 0 : subjects.size();
  }

	public void setSubjects(List<Subject> subjects)
	{
		this.subjects = subjects;
	}

	public MetadataString	aboutTheAuthors()
	{
		MetadataString	result = this.aboutTheAuthors;
		if (result == null)
		{
			result = new MetadataString();
			this.aboutTheAuthors = result;
		}
		return result;
	}

	public String getAboutTheAuthors()
	{
		return this.aboutTheAuthors == null ? null : aboutTheAuthors().getValue();
	}

	public MetadataString getAboutTheAuthorsMetadata()
	{
		return aboutTheAuthors;
	}

	public void setAboutTheAuthors(String aboutTheAuthors)
	{
		if (aboutTheAuthors != null)
			this.aboutTheAuthors().setValue(aboutTheAuthors);
	}

	public void setAboutTheAuthorsMetadata(MetadataString aboutTheAuthors)
	{
		this.aboutTheAuthors = aboutTheAuthors;
	}

	public List<TermType> getCommonTerms()
	{
		return commonTerms;
	}

  // lazy evaluation:
  public List<TermType> commonTerms()
  {
    if (commonTerms == null)
      commonTerms = new ArrayList<TermType>();
    return commonTerms;
  }

  // addTo:
  public void addToCommonTerms(TermType element)
  {
    commonTerms().add(element);
  }

  // size:
  public int commonTermsSize()
  {
    return commonTerms == null ? 0 : commonTerms.size();
  }

	public void setCommonTerms(List<TermType> commonTerms)
	{
		this.commonTerms = commonTerms;
	}
}
