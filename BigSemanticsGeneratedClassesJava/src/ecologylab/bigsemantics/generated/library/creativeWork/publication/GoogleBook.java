package ecologylab.bigsemantics.generated.library.creativeWork.publication;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.publication.Book;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class GoogleBook extends Book
{
	@simpl_collection("rich_document")
	@mm_name("purchase_links")
	private List<RichDocument> purchaseLinks;

	public GoogleBook()
	{ super(); }

	public GoogleBook(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<RichDocument> getPurchaseLinks()
	{
		return purchaseLinks;
	}

  // lazy evaluation:
  public List<RichDocument> purchaseLinks()
  {
    if (purchaseLinks == null)
      purchaseLinks = new ArrayList<RichDocument>();
    return purchaseLinks;
  }

  // addTo:
  public void addToPurchaseLinks(RichDocument element)
  {
    purchaseLinks().add(element);
  }

  // size:
  public int purchaseLinksSize()
  {
    return purchaseLinks == null ? 0 : purchaseLinks.size();
  }

	public void setPurchaseLinks(List<RichDocument> purchaseLinks)
	{
		this.purchaseLinks = purchaseLinks;
	}
}
