package ecologylab.bigsemantics.generated.library.creativeWork.publication;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.publication.BasicPublication;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataDate;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.Date;
import java.util.List;
import java.util.Map;

/** 
 *An issue of a periodical.
 */ 
@simpl_inherit
public class Periodical extends BasicPublication
{
	/** 
	 *All the issues of a periodical.
	 */ 
	@simpl_composite
	@mm_name("archive")
	private RichDocument archive;

	@simpl_scalar
	private MetadataString volume;

	@simpl_scalar
	private MetadataString issue;

	/** 
	 *Publication Date
	 */ 
	@simpl_scalar
	private MetadataDate date;

	public Periodical()
	{ super(); }

	public Periodical(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public RichDocument getArchive()
	{
		return archive;
	}

	public void setArchive(RichDocument archive)
	{
		this.archive = archive;
	}

	public MetadataString	volume()
	{
		MetadataString	result = this.volume;
		if (result == null)
		{
			result = new MetadataString();
			this.volume = result;
		}
		return result;
	}

	public String getVolume()
	{
		return this.volume == null ? null : volume().getValue();
	}

	public MetadataString getVolumeMetadata()
	{
		return volume;
	}

	public void setVolume(String volume)
	{
		if (volume != null)
			this.volume().setValue(volume);
	}

	public void setVolumeMetadata(MetadataString volume)
	{
		this.volume = volume;
	}

	public MetadataString	issue()
	{
		MetadataString	result = this.issue;
		if (result == null)
		{
			result = new MetadataString();
			this.issue = result;
		}
		return result;
	}

	public String getIssue()
	{
		return this.issue == null ? null : issue().getValue();
	}

	public MetadataString getIssueMetadata()
	{
		return issue;
	}

	public void setIssue(String issue)
	{
		if (issue != null)
			this.issue().setValue(issue);
	}

	public void setIssueMetadata(MetadataString issue)
	{
		this.issue = issue;
	}

	public MetadataDate	date()
	{
		MetadataDate	result = this.date;
		if (result == null)
		{
			result = new MetadataDate();
			this.date = result;
		}
		return result;
	}

	public Date getDate()
	{
		return this.date == null ? null : date().getValue();
	}

	public MetadataDate getDateMetadata()
	{
		return date;
	}

	public void setDate(Date date)
	{
		if (date != null)
			this.date().setValue(date);
	}

	public void setDateMetadata(MetadataDate date)
	{
		this.date = date;
	}
}
