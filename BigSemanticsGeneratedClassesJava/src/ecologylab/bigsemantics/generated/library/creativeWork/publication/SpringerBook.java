package ecologylab.bigsemantics.generated.library.creativeWork.publication;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.publication.Book;
import ecologylab.bigsemantics.generated.library.search.SpringerSearch;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import ecologylab.serialization.annotations.simpl_tag;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *A book in Springer Link.
 */ 
@simpl_inherit
public class SpringerBook extends Book
{
	@simpl_scalar
	private MetadataString subtitle;

	@simpl_collection("springer_search")
	@mm_name("editor_names")
	private List<SpringerSearch> editorNames;

	@simpl_collection("springer_search")
	@mm_name("book_chapters_incomplete")
	private List<SpringerSearch> bookChaptersIncomplete;

	@simpl_scalar
	private MetadataString copyright;

	@simpl_scalar
	@simpl_tag("DOI")
	private MetadataString DOI;

	@simpl_scalar
	@simpl_tag("print_ISBN")
	private MetadataString printISBN;

	@simpl_scalar
	@simpl_tag("online_ISBN")
	private MetadataString onlineISBN;

	@simpl_scalar
	private MetadataString seriesVolume;

	@simpl_scalar
	@simpl_tag("series_ISSN")
	private MetadataString seriesISSN;

	@simpl_scalar
	private MetadataString copyrightHolder;

	@simpl_collection("springer_search")
	@mm_name("topics")
	private List<SpringerSearch> topics;

	@simpl_collection("springer_search")
	@mm_name("ebook_packages")
	private List<SpringerSearch> ebookPackages;

	@simpl_collection("editor_affiliation")
	@mm_name("editor_affiliations")
	private List<MetadataString> editorAffiliations;

	public SpringerBook()
	{ super(); }

	public SpringerBook(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	subtitle()
	{
		MetadataString	result = this.subtitle;
		if (result == null)
		{
			result = new MetadataString();
			this.subtitle = result;
		}
		return result;
	}

	public String getSubtitle()
	{
		return this.subtitle == null ? null : subtitle().getValue();
	}

	public MetadataString getSubtitleMetadata()
	{
		return subtitle;
	}

	public void setSubtitle(String subtitle)
	{
		if (subtitle != null)
			this.subtitle().setValue(subtitle);
	}

	public void setSubtitleMetadata(MetadataString subtitle)
	{
		this.subtitle = subtitle;
	}

	public List<SpringerSearch> getEditorNames()
	{
		return editorNames;
	}

  // lazy evaluation:
  public List<SpringerSearch> editorNames()
  {
    if (editorNames == null)
      editorNames = new ArrayList<SpringerSearch>();
    return editorNames;
  }

  // addTo:
  public void addToEditorNames(SpringerSearch element)
  {
    editorNames().add(element);
  }

  // size:
  public int editorNamesSize()
  {
    return editorNames == null ? 0 : editorNames.size();
  }

	public void setEditorNames(List<SpringerSearch> editorNames)
	{
		this.editorNames = editorNames;
	}

	public List<SpringerSearch> getBookChaptersIncomplete()
	{
		return bookChaptersIncomplete;
	}

  // lazy evaluation:
  public List<SpringerSearch> bookChaptersIncomplete()
  {
    if (bookChaptersIncomplete == null)
      bookChaptersIncomplete = new ArrayList<SpringerSearch>();
    return bookChaptersIncomplete;
  }

  // addTo:
  public void addToBookChaptersIncomplete(SpringerSearch element)
  {
    bookChaptersIncomplete().add(element);
  }

  // size:
  public int bookChaptersIncompleteSize()
  {
    return bookChaptersIncomplete == null ? 0 : bookChaptersIncomplete.size();
  }

	public void setBookChaptersIncomplete(List<SpringerSearch> bookChaptersIncomplete)
	{
		this.bookChaptersIncomplete = bookChaptersIncomplete;
	}

	public MetadataString	copyright()
	{
		MetadataString	result = this.copyright;
		if (result == null)
		{
			result = new MetadataString();
			this.copyright = result;
		}
		return result;
	}

	public String getCopyright()
	{
		return this.copyright == null ? null : copyright().getValue();
	}

	public MetadataString getCopyrightMetadata()
	{
		return copyright;
	}

	public void setCopyright(String copyright)
	{
		if (copyright != null)
			this.copyright().setValue(copyright);
	}

	public void setCopyrightMetadata(MetadataString copyright)
	{
		this.copyright = copyright;
	}

	public MetadataString	DOI()
	{
		MetadataString	result = this.DOI;
		if (result == null)
		{
			result = new MetadataString();
			this.DOI = result;
		}
		return result;
	}

	public String getDOI()
	{
		return this.DOI == null ? null : DOI().getValue();
	}

	public MetadataString getDOIMetadata()
	{
		return DOI;
	}

	public void setDOI(String DOI)
	{
		if (DOI != null)
			this.DOI().setValue(DOI);
	}

	public void setDOIMetadata(MetadataString DOI)
	{
		this.DOI = DOI;
	}

	public MetadataString	printISBN()
	{
		MetadataString	result = this.printISBN;
		if (result == null)
		{
			result = new MetadataString();
			this.printISBN = result;
		}
		return result;
	}

	public String getPrintISBN()
	{
		return this.printISBN == null ? null : printISBN().getValue();
	}

	public MetadataString getPrintISBNMetadata()
	{
		return printISBN;
	}

	public void setPrintISBN(String printISBN)
	{
		if (printISBN != null)
			this.printISBN().setValue(printISBN);
	}

	public void setPrintISBNMetadata(MetadataString printISBN)
	{
		this.printISBN = printISBN;
	}

	public MetadataString	onlineISBN()
	{
		MetadataString	result = this.onlineISBN;
		if (result == null)
		{
			result = new MetadataString();
			this.onlineISBN = result;
		}
		return result;
	}

	public String getOnlineISBN()
	{
		return this.onlineISBN == null ? null : onlineISBN().getValue();
	}

	public MetadataString getOnlineISBNMetadata()
	{
		return onlineISBN;
	}

	public void setOnlineISBN(String onlineISBN)
	{
		if (onlineISBN != null)
			this.onlineISBN().setValue(onlineISBN);
	}

	public void setOnlineISBNMetadata(MetadataString onlineISBN)
	{
		this.onlineISBN = onlineISBN;
	}

	public MetadataString	seriesVolume()
	{
		MetadataString	result = this.seriesVolume;
		if (result == null)
		{
			result = new MetadataString();
			this.seriesVolume = result;
		}
		return result;
	}

	public String getSeriesVolume()
	{
		return this.seriesVolume == null ? null : seriesVolume().getValue();
	}

	public MetadataString getSeriesVolumeMetadata()
	{
		return seriesVolume;
	}

	public void setSeriesVolume(String seriesVolume)
	{
		if (seriesVolume != null)
			this.seriesVolume().setValue(seriesVolume);
	}

	public void setSeriesVolumeMetadata(MetadataString seriesVolume)
	{
		this.seriesVolume = seriesVolume;
	}

	public MetadataString	seriesISSN()
	{
		MetadataString	result = this.seriesISSN;
		if (result == null)
		{
			result = new MetadataString();
			this.seriesISSN = result;
		}
		return result;
	}

	public String getSeriesISSN()
	{
		return this.seriesISSN == null ? null : seriesISSN().getValue();
	}

	public MetadataString getSeriesISSNMetadata()
	{
		return seriesISSN;
	}

	public void setSeriesISSN(String seriesISSN)
	{
		if (seriesISSN != null)
			this.seriesISSN().setValue(seriesISSN);
	}

	public void setSeriesISSNMetadata(MetadataString seriesISSN)
	{
		this.seriesISSN = seriesISSN;
	}

	public MetadataString	copyrightHolder()
	{
		MetadataString	result = this.copyrightHolder;
		if (result == null)
		{
			result = new MetadataString();
			this.copyrightHolder = result;
		}
		return result;
	}

	public String getCopyrightHolder()
	{
		return this.copyrightHolder == null ? null : copyrightHolder().getValue();
	}

	public MetadataString getCopyrightHolderMetadata()
	{
		return copyrightHolder;
	}

	public void setCopyrightHolder(String copyrightHolder)
	{
		if (copyrightHolder != null)
			this.copyrightHolder().setValue(copyrightHolder);
	}

	public void setCopyrightHolderMetadata(MetadataString copyrightHolder)
	{
		this.copyrightHolder = copyrightHolder;
	}

	public List<SpringerSearch> getTopics()
	{
		return topics;
	}

  // lazy evaluation:
  public List<SpringerSearch> topics()
  {
    if (topics == null)
      topics = new ArrayList<SpringerSearch>();
    return topics;
  }

  // addTo:
  public void addToTopics(SpringerSearch element)
  {
    topics().add(element);
  }

  // size:
  public int topicsSize()
  {
    return topics == null ? 0 : topics.size();
  }

	public void setTopics(List<SpringerSearch> topics)
	{
		this.topics = topics;
	}

	public List<SpringerSearch> getEbookPackages()
	{
		return ebookPackages;
	}

  // lazy evaluation:
  public List<SpringerSearch> ebookPackages()
  {
    if (ebookPackages == null)
      ebookPackages = new ArrayList<SpringerSearch>();
    return ebookPackages;
  }

  // addTo:
  public void addToEbookPackages(SpringerSearch element)
  {
    ebookPackages().add(element);
  }

  // size:
  public int ebookPackagesSize()
  {
    return ebookPackages == null ? 0 : ebookPackages.size();
  }

	public void setEbookPackages(List<SpringerSearch> ebookPackages)
	{
		this.ebookPackages = ebookPackages;
	}

	public List<MetadataString> getEditorAffiliations()
	{
		return editorAffiliations;
	}

  // lazy evaluation:
  public List<MetadataString> editorAffiliations()
  {
    if (editorAffiliations == null)
      editorAffiliations = new ArrayList<MetadataString>();
    return editorAffiliations;
  }

  // addTo:
  public void addToEditorAffiliations(MetadataString element)
  {
    editorAffiliations().add(element);
  }

  // size:
  public int editorAffiliationsSize()
  {
    return editorAffiliations == null ? 0 : editorAffiliations.size();
  }

	public void setEditorAffiliations(List<MetadataString> editorAffiliations)
	{
		this.editorAffiliations = editorAffiliations;
	}
}
