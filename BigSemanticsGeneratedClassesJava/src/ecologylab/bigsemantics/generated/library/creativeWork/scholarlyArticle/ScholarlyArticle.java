package ecologylab.bigsemantics.generated.library.creativeWork.scholarlyArticle;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.article.Article;
import ecologylab.bigsemantics.generated.library.creativeWork.publication.Periodical;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class ScholarlyArticle extends Article
{
	/** 
	 *Metadata related to where this article was published.
	 */ 
	@simpl_composite
	@mm_name("source")
	private Periodical source;

	/** 
	 *The Classifications of this paper.
	 */ 
	@simpl_collection("rich_document")
	@mm_name("classifications")
	private List<RichDocument> classifications;

	@simpl_scalar
	private MetadataString pages;

	@simpl_scalar
	private MetadataString citationCount;

	public ScholarlyArticle()
	{ super(); }

	public ScholarlyArticle(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public Periodical getSource()
	{
		return source;
	}

	public void setSource(Periodical source)
	{
		this.source = source;
	}

	public List<RichDocument> getClassifications()
	{
		return classifications;
	}

  // lazy evaluation:
  public List<RichDocument> classifications()
  {
    if (classifications == null)
      classifications = new ArrayList<RichDocument>();
    return classifications;
  }

  // addTo:
  public void addToClassifications(RichDocument element)
  {
    classifications().add(element);
  }

  // size:
  public int classificationsSize()
  {
    return classifications == null ? 0 : classifications.size();
  }

	public void setClassifications(List<RichDocument> classifications)
	{
		this.classifications = classifications;
	}

	public MetadataString	pages()
	{
		MetadataString	result = this.pages;
		if (result == null)
		{
			result = new MetadataString();
			this.pages = result;
		}
		return result;
	}

	public String getPages()
	{
		return this.pages == null ? null : pages().getValue();
	}

	public MetadataString getPagesMetadata()
	{
		return pages;
	}

	public void setPages(String pages)
	{
		if (pages != null)
			this.pages().setValue(pages);
	}

	public void setPagesMetadata(MetadataString pages)
	{
		this.pages = pages;
	}

	public MetadataString	citationCount()
	{
		MetadataString	result = this.citationCount;
		if (result == null)
		{
			result = new MetadataString();
			this.citationCount = result;
		}
		return result;
	}

	public String getCitationCount()
	{
		return this.citationCount == null ? null : citationCount().getValue();
	}

	public MetadataString getCitationCountMetadata()
	{
		return citationCount;
	}

	public void setCitationCount(String citationCount)
	{
		if (citationCount != null)
			this.citationCount().setValue(citationCount);
	}

	public void setCitationCountMetadata(MetadataString citationCount)
	{
		this.citationCount = citationCount;
	}
}
