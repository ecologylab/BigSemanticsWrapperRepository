package ecologylab.bigsemantics.generated.library.creativeWork.scholarlyArticle;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.IeeeKeywords;
import ecologylab.bigsemantics.generated.library.IeeeXploreCitedBy;
import ecologylab.bigsemantics.generated.library.IeeeXploreReferences;
import ecologylab.bigsemantics.generated.library.creativeWork.publication.IeeeJournalPage;
import ecologylab.bigsemantics.generated.library.creativeWork.scholarlyArticle.ScholarlyArticle;
import ecologylab.bigsemantics.generated.library.person.author.IeeeAuthorPage;
import ecologylab.bigsemantics.generated.library.search.IeeeXploreSearch;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataParsedURL;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.net.ParsedURL;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class IeeeXploreArticle extends ScholarlyArticle
{
	@simpl_composite
	@mm_name("author_page")
	private IeeeAuthorPage authorPage;

	@simpl_collection("ieee_xplore_search")
	@mm_name("articles_by_authors")
	private List<IeeeXploreSearch> articlesByAuthors;

	@simpl_composite
	@mm_name("published_in")
	private IeeeJournalPage publishedIn;

	@simpl_composite
	@mm_name("keyword_page")
	private IeeeKeywords keywordPage;

	@simpl_composite
	@mm_name("references_page")
	private IeeeXploreReferences referencesPage;

	@simpl_composite
	@mm_name("cited_by")
	private IeeeXploreCitedBy citedBy;

	/** 
	 *The digital object identifier of the article
	 */ 
	@simpl_scalar
	private MetadataParsedURL doi;

	public IeeeXploreArticle()
	{ super(); }

	public IeeeXploreArticle(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public IeeeAuthorPage getAuthorPage()
	{
		return authorPage;
	}

	public void setAuthorPage(IeeeAuthorPage authorPage)
	{
		this.authorPage = authorPage;
	}

	public List<IeeeXploreSearch> getArticlesByAuthors()
	{
		return articlesByAuthors;
	}

  // lazy evaluation:
  public List<IeeeXploreSearch> articlesByAuthors()
  {
    if (articlesByAuthors == null)
      articlesByAuthors = new ArrayList<IeeeXploreSearch>();
    return articlesByAuthors;
  }

  // addTo:
  public void addToArticlesByAuthors(IeeeXploreSearch element)
  {
    articlesByAuthors().add(element);
  }

  // size:
  public int articlesByAuthorsSize()
  {
    return articlesByAuthors == null ? 0 : articlesByAuthors.size();
  }

	public void setArticlesByAuthors(List<IeeeXploreSearch> articlesByAuthors)
	{
		this.articlesByAuthors = articlesByAuthors;
	}

	public IeeeJournalPage getPublishedIn()
	{
		return publishedIn;
	}

	public void setPublishedIn(IeeeJournalPage publishedIn)
	{
		this.publishedIn = publishedIn;
	}

	public IeeeKeywords getKeywordPage()
	{
		return keywordPage;
	}

	public void setKeywordPage(IeeeKeywords keywordPage)
	{
		this.keywordPage = keywordPage;
	}

	public IeeeXploreReferences getReferencesPage()
	{
		return referencesPage;
	}

	public void setReferencesPage(IeeeXploreReferences referencesPage)
	{
		this.referencesPage = referencesPage;
	}

	public IeeeXploreCitedBy getCitedBy()
	{
		return citedBy;
	}

	public void setCitedBy(IeeeXploreCitedBy citedBy)
	{
		this.citedBy = citedBy;
	}

	public MetadataParsedURL	doi()
	{
		MetadataParsedURL	result = this.doi;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.doi = result;
		}
		return result;
	}

	public ParsedURL getDoi()
	{
		return this.doi == null ? null : doi().getValue();
	}

	public MetadataParsedURL getDoiMetadata()
	{
		return doi;
	}

	public void setDoi(ParsedURL doi)
	{
		if (doi != null)
			this.doi().setValue(doi);
	}

	public void setDoiMetadata(MetadataParsedURL doi)
	{
		this.doi = doi;
	}
}
