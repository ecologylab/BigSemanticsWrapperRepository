package ecologylab.bigsemantics.generated.library.creativeWork.collaborative;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.collaborative.Commit;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class CommitsByDate extends RichDocument
{
	@simpl_scalar
	private MetadataString date;

	@simpl_collection("commit")
	@mm_name("commits_section")
	private List<Commit> commitsSection;

	public CommitsByDate()
	{ super(); }

	public CommitsByDate(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	date()
	{
		MetadataString	result = this.date;
		if (result == null)
		{
			result = new MetadataString();
			this.date = result;
		}
		return result;
	}

	public String getDate()
	{
		return this.date == null ? null : date().getValue();
	}

	public MetadataString getDateMetadata()
	{
		return date;
	}

	public void setDate(String date)
	{
		if (date != null)
			this.date().setValue(date);
	}

	public void setDateMetadata(MetadataString date)
	{
		this.date = date;
	}

	public List<Commit> getCommitsSection()
	{
		return commitsSection;
	}

  // lazy evaluation:
  public List<Commit> commitsSection()
  {
    if (commitsSection == null)
      commitsSection = new ArrayList<Commit>();
    return commitsSection;
  }

  // addTo:
  public void addToCommitsSection(Commit element)
  {
    commitsSection().add(element);
  }

  // size:
  public int commitsSectionSize()
  {
    return commitsSection == null ? 0 : commitsSection.size();
  }

	public void setCommitsSection(List<Commit> commitsSection)
	{
		this.commitsSection = commitsSection;
	}
}
