package ecologylab.bigsemantics.generated.library.creativeWork.collaborative;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.collaborative.Issue;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class IssuesPage extends RichDocument
{
	@simpl_collection("issue")
	@mm_name("open_issues")
	private List<Issue> openIssues;

	public IssuesPage()
	{ super(); }

	public IssuesPage(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<Issue> getOpenIssues()
	{
		return openIssues;
	}

  // lazy evaluation:
  public List<Issue> openIssues()
  {
    if (openIssues == null)
      openIssues = new ArrayList<Issue>();
    return openIssues;
  }

  // addTo:
  public void addToOpenIssues(Issue element)
  {
    openIssues().add(element);
  }

  // size:
  public int openIssuesSize()
  {
    return openIssues == null ? 0 : openIssues.size();
  }

	public void setOpenIssues(List<Issue> openIssues)
	{
		this.openIssues = openIssues;
	}
}
