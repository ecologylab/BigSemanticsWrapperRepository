package ecologylab.bigsemantics.generated.library.creativeWork.collaborative;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.collaborative.CommitsByDate;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class CommitsPage extends RichDocument
{
	@simpl_collection("commits_by_date")
	@mm_name("all_commits")
	private List<CommitsByDate> allCommits;

	public CommitsPage()
	{ super(); }

	public CommitsPage(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<CommitsByDate> getAllCommits()
	{
		return allCommits;
	}

  // lazy evaluation:
  public List<CommitsByDate> allCommits()
  {
    if (allCommits == null)
      allCommits = new ArrayList<CommitsByDate>();
    return allCommits;
  }

  // addTo:
  public void addToAllCommits(CommitsByDate element)
  {
    allCommits().add(element);
  }

  // size:
  public int allCommitsSize()
  {
    return allCommits == null ? 0 : allCommits.size();
  }

	public void setAllCommits(List<CommitsByDate> allCommits)
	{
		this.allCommits = allCommits;
	}
}
