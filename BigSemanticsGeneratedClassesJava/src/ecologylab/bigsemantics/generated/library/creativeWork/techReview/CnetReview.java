package ecologylab.bigsemantics.generated.library.creativeWork.techReview;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.techReview.TechReview;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** 
 *cnet.com review
 */ 
@simpl_inherit
public class CnetReview extends TechReview
{
	@simpl_scalar
	private MetadataString author;

	@simpl_scalar
	private MetadataString good;

	@simpl_scalar
	private MetadataString bad;

	@simpl_scalar
	private MetadataString bottom;

	@simpl_collection("rich_document")
	@mm_name("specifications")
	private List<RichDocument> specifications;

	public CnetReview()
	{ super(); }

	public CnetReview(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	author()
	{
		MetadataString	result = this.author;
		if (result == null)
		{
			result = new MetadataString();
			this.author = result;
		}
		return result;
	}

	public String getAuthor()
	{
		return this.author == null ? null : author().getValue();
	}

	public MetadataString getAuthorMetadata()
	{
		return author;
	}

	public void setAuthor(String author)
	{
		if (author != null)
			this.author().setValue(author);
	}

	public void setAuthorMetadata(MetadataString author)
	{
		this.author = author;
	}

	public MetadataString	good()
	{
		MetadataString	result = this.good;
		if (result == null)
		{
			result = new MetadataString();
			this.good = result;
		}
		return result;
	}

	public String getGood()
	{
		return this.good == null ? null : good().getValue();
	}

	public MetadataString getGoodMetadata()
	{
		return good;
	}

	public void setGood(String good)
	{
		if (good != null)
			this.good().setValue(good);
	}

	public void setGoodMetadata(MetadataString good)
	{
		this.good = good;
	}

	public MetadataString	bad()
	{
		MetadataString	result = this.bad;
		if (result == null)
		{
			result = new MetadataString();
			this.bad = result;
		}
		return result;
	}

	public String getBad()
	{
		return this.bad == null ? null : bad().getValue();
	}

	public MetadataString getBadMetadata()
	{
		return bad;
	}

	public void setBad(String bad)
	{
		if (bad != null)
			this.bad().setValue(bad);
	}

	public void setBadMetadata(MetadataString bad)
	{
		this.bad = bad;
	}

	public MetadataString	bottom()
	{
		MetadataString	result = this.bottom;
		if (result == null)
		{
			result = new MetadataString();
			this.bottom = result;
		}
		return result;
	}

	public String getBottom()
	{
		return this.bottom == null ? null : bottom().getValue();
	}

	public MetadataString getBottomMetadata()
	{
		return bottom;
	}

	public void setBottom(String bottom)
	{
		if (bottom != null)
			this.bottom().setValue(bottom);
	}

	public void setBottomMetadata(MetadataString bottom)
	{
		this.bottom = bottom;
	}

	public List<RichDocument> getSpecifications()
	{
		return specifications;
	}

  // lazy evaluation:
  public List<RichDocument> specifications()
  {
    if (specifications == null)
      specifications = new ArrayList<RichDocument>();
    return specifications;
  }

  // addTo:
  public void addToSpecifications(RichDocument element)
  {
    specifications().add(element);
  }

  // size:
  public int specificationsSize()
  {
    return specifications == null ? 0 : specifications.size();
  }

	public void setSpecifications(List<RichDocument> specifications)
	{
		this.specifications = specifications;
	}
}
