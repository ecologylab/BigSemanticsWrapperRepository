package ecologylab.bigsemantics.generated.library.creativeWork;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.GrantProgram;
import ecologylab.bigsemantics.generated.library.PostalAddress;
import ecologylab.bigsemantics.generated.library.creativeWork.scholarlyArticle.ScholarlyArticle;
import ecologylab.bigsemantics.generated.library.person.GrantStaff;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.creativeWork.CreativeWork;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataDate;
import ecologylab.bigsemantics.metadata.scalar.MetadataInteger;
import ecologylab.bigsemantics.metadata.scalar.MetadataParsedURL;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.net.ParsedURL;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.Integer;
import java.lang.String;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class Grant extends CreativeWork
{
	@simpl_collection("grant_program")
	@mm_name("programs")
	private List<GrantProgram> programs;

	@simpl_scalar
	private MetadataString grantNumber;

	@simpl_scalar
	private MetadataDate startDate;

	@simpl_scalar
	private MetadataDate expireDate;

	@simpl_scalar
	private MetadataInteger amount;

	@simpl_collection("grant_staff")
	@mm_name("managers")
	private List<GrantStaff> managers;

	@simpl_composite
	@mm_name("sponsor")
	private PostalAddress sponsor;

	@simpl_collection("scholarly_article")
	@mm_name("publications")
	private List<ScholarlyArticle> publications;

	@simpl_collection("scholarly_article")
	@mm_name("proceedings")
	private List<ScholarlyArticle> proceedings;

	@simpl_collection("relevant_location")
	@mm_name("relevant_locations")
	private List<MetadataParsedURL> relevantLocations;

	public Grant()
	{ super(); }

	public Grant(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<GrantProgram> getPrograms()
	{
		return programs;
	}

  // lazy evaluation:
  public List<GrantProgram> programs()
  {
    if (programs == null)
      programs = new ArrayList<GrantProgram>();
    return programs;
  }

  // addTo:
  public void addToPrograms(GrantProgram element)
  {
    programs().add(element);
  }

  // size:
  public int programsSize()
  {
    return programs == null ? 0 : programs.size();
  }

	public void setPrograms(List<GrantProgram> programs)
	{
		this.programs = programs;
	}

	public MetadataString	grantNumber()
	{
		MetadataString	result = this.grantNumber;
		if (result == null)
		{
			result = new MetadataString();
			this.grantNumber = result;
		}
		return result;
	}

	public String getGrantNumber()
	{
		return this.grantNumber == null ? null : grantNumber().getValue();
	}

	public MetadataString getGrantNumberMetadata()
	{
		return grantNumber;
	}

	public void setGrantNumber(String grantNumber)
	{
		if (grantNumber != null)
			this.grantNumber().setValue(grantNumber);
	}

	public void setGrantNumberMetadata(MetadataString grantNumber)
	{
		this.grantNumber = grantNumber;
	}

	public MetadataDate	startDate()
	{
		MetadataDate	result = this.startDate;
		if (result == null)
		{
			result = new MetadataDate();
			this.startDate = result;
		}
		return result;
	}

	public Date getStartDate()
	{
		return this.startDate == null ? null : startDate().getValue();
	}

	public MetadataDate getStartDateMetadata()
	{
		return startDate;
	}

	public void setStartDate(Date startDate)
	{
		if (startDate != null)
			this.startDate().setValue(startDate);
	}

	public void setStartDateMetadata(MetadataDate startDate)
	{
		this.startDate = startDate;
	}

	public MetadataDate	expireDate()
	{
		MetadataDate	result = this.expireDate;
		if (result == null)
		{
			result = new MetadataDate();
			this.expireDate = result;
		}
		return result;
	}

	public Date getExpireDate()
	{
		return this.expireDate == null ? null : expireDate().getValue();
	}

	public MetadataDate getExpireDateMetadata()
	{
		return expireDate;
	}

	public void setExpireDate(Date expireDate)
	{
		if (expireDate != null)
			this.expireDate().setValue(expireDate);
	}

	public void setExpireDateMetadata(MetadataDate expireDate)
	{
		this.expireDate = expireDate;
	}

	public MetadataInteger	amount()
	{
		MetadataInteger	result = this.amount;
		if (result == null)
		{
			result = new MetadataInteger();
			this.amount = result;
		}
		return result;
	}

	public Integer getAmount()
	{
		return this.amount == null ? 0 : amount().getValue();
	}

	public MetadataInteger getAmountMetadata()
	{
		return amount;
	}

	public void setAmount(Integer amount)
	{
		if (amount != 0)
			this.amount().setValue(amount);
	}

	public void setAmountMetadata(MetadataInteger amount)
	{
		this.amount = amount;
	}

	public List<GrantStaff> getManagers()
	{
		return managers;
	}

  // lazy evaluation:
  public List<GrantStaff> managers()
  {
    if (managers == null)
      managers = new ArrayList<GrantStaff>();
    return managers;
  }

  // addTo:
  public void addToManagers(GrantStaff element)
  {
    managers().add(element);
  }

  // size:
  public int managersSize()
  {
    return managers == null ? 0 : managers.size();
  }

	public void setManagers(List<GrantStaff> managers)
	{
		this.managers = managers;
	}

	public PostalAddress getSponsor()
	{
		return sponsor;
	}

	public void setSponsor(PostalAddress sponsor)
	{
		this.sponsor = sponsor;
	}

	public List<ScholarlyArticle> getPublications()
	{
		return publications;
	}

  // lazy evaluation:
  public List<ScholarlyArticle> publications()
  {
    if (publications == null)
      publications = new ArrayList<ScholarlyArticle>();
    return publications;
  }

  // addTo:
  public void addToPublications(ScholarlyArticle element)
  {
    publications().add(element);
  }

  // size:
  public int publicationsSize()
  {
    return publications == null ? 0 : publications.size();
  }

	public void setPublications(List<ScholarlyArticle> publications)
	{
		this.publications = publications;
	}

	public List<ScholarlyArticle> getProceedings()
	{
		return proceedings;
	}

  // lazy evaluation:
  public List<ScholarlyArticle> proceedings()
  {
    if (proceedings == null)
      proceedings = new ArrayList<ScholarlyArticle>();
    return proceedings;
  }

  // addTo:
  public void addToProceedings(ScholarlyArticle element)
  {
    proceedings().add(element);
  }

  // size:
  public int proceedingsSize()
  {
    return proceedings == null ? 0 : proceedings.size();
  }

	public void setProceedings(List<ScholarlyArticle> proceedings)
	{
		this.proceedings = proceedings;
	}

	public List<MetadataParsedURL> getRelevantLocations()
	{
		return relevantLocations;
	}

  // lazy evaluation:
  public List<MetadataParsedURL> relevantLocations()
  {
    if (relevantLocations == null)
      relevantLocations = new ArrayList<MetadataParsedURL>();
    return relevantLocations;
  }

  // addTo:
  public void addToRelevantLocations(MetadataParsedURL element)
  {
    relevantLocations().add(element);
  }

  // size:
  public int relevantLocationsSize()
  {
    return relevantLocations == null ? 0 : relevantLocations.size();
  }

	public void setRelevantLocations(List<MetadataParsedURL> relevantLocations)
	{
		this.relevantLocations = relevantLocations;
	}
}
