package ecologylab.bigsemantics.generated.library;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.FondationCollection;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class FondationCategoryCollection extends RichDocument
{
	@simpl_collection("fondation_collection")
	@mm_name("collections")
	private List<FondationCollection> collections;

	public FondationCategoryCollection()
	{ super(); }

	public FondationCategoryCollection(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<FondationCollection> getCollections()
	{
		return collections;
	}

  // lazy evaluation:
  public List<FondationCollection> collections()
  {
    if (collections == null)
      collections = new ArrayList<FondationCollection>();
    return collections;
  }

  // addTo:
  public void addToCollections(FondationCollection element)
  {
    collections().add(element);
  }

  // size:
  public int collectionsSize()
  {
    return collections == null ? 0 : collections.size();
  }

	public void setCollections(List<FondationCollection> collections)
	{
		this.collections = collections;
	}
}
