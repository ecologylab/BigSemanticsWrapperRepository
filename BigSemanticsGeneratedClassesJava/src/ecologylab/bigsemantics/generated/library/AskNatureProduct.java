package ecologylab.bigsemantics.generated.library;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.AskNatureStrategy;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class AskNatureProduct extends RichDocument
{
	@simpl_scalar
	private MetadataString company;

	@simpl_scalar
	private MetadataString productPhase;

	@simpl_scalar
	private MetadataString explanation;

	@simpl_scalar
	private MetadataString challengesSolved;

	@simpl_scalar
	private MetadataString differencesFromExistingProducts;

	@simpl_collection("ask_nature_strategy")
	@mm_name("inspiring_strategies")
	private List<AskNatureStrategy> inspiringStrategies;

	@simpl_scalar
	private MetadataString biomimicryStory;

	public AskNatureProduct()
	{ super(); }

	public AskNatureProduct(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	company()
	{
		MetadataString	result = this.company;
		if (result == null)
		{
			result = new MetadataString();
			this.company = result;
		}
		return result;
	}

	public String getCompany()
	{
		return this.company == null ? null : company().getValue();
	}

	public MetadataString getCompanyMetadata()
	{
		return company;
	}

	public void setCompany(String company)
	{
		if (company != null)
			this.company().setValue(company);
	}

	public void setCompanyMetadata(MetadataString company)
	{
		this.company = company;
	}

	public MetadataString	productPhase()
	{
		MetadataString	result = this.productPhase;
		if (result == null)
		{
			result = new MetadataString();
			this.productPhase = result;
		}
		return result;
	}

	public String getProductPhase()
	{
		return this.productPhase == null ? null : productPhase().getValue();
	}

	public MetadataString getProductPhaseMetadata()
	{
		return productPhase;
	}

	public void setProductPhase(String productPhase)
	{
		if (productPhase != null)
			this.productPhase().setValue(productPhase);
	}

	public void setProductPhaseMetadata(MetadataString productPhase)
	{
		this.productPhase = productPhase;
	}

	public MetadataString	explanation()
	{
		MetadataString	result = this.explanation;
		if (result == null)
		{
			result = new MetadataString();
			this.explanation = result;
		}
		return result;
	}

	public String getExplanation()
	{
		return this.explanation == null ? null : explanation().getValue();
	}

	public MetadataString getExplanationMetadata()
	{
		return explanation;
	}

	public void setExplanation(String explanation)
	{
		if (explanation != null)
			this.explanation().setValue(explanation);
	}

	public void setExplanationMetadata(MetadataString explanation)
	{
		this.explanation = explanation;
	}

	public MetadataString	challengesSolved()
	{
		MetadataString	result = this.challengesSolved;
		if (result == null)
		{
			result = new MetadataString();
			this.challengesSolved = result;
		}
		return result;
	}

	public String getChallengesSolved()
	{
		return this.challengesSolved == null ? null : challengesSolved().getValue();
	}

	public MetadataString getChallengesSolvedMetadata()
	{
		return challengesSolved;
	}

	public void setChallengesSolved(String challengesSolved)
	{
		if (challengesSolved != null)
			this.challengesSolved().setValue(challengesSolved);
	}

	public void setChallengesSolvedMetadata(MetadataString challengesSolved)
	{
		this.challengesSolved = challengesSolved;
	}

	public MetadataString	differencesFromExistingProducts()
	{
		MetadataString	result = this.differencesFromExistingProducts;
		if (result == null)
		{
			result = new MetadataString();
			this.differencesFromExistingProducts = result;
		}
		return result;
	}

	public String getDifferencesFromExistingProducts()
	{
		return this.differencesFromExistingProducts == null ? null : differencesFromExistingProducts().getValue();
	}

	public MetadataString getDifferencesFromExistingProductsMetadata()
	{
		return differencesFromExistingProducts;
	}

	public void setDifferencesFromExistingProducts(String differencesFromExistingProducts)
	{
		if (differencesFromExistingProducts != null)
			this.differencesFromExistingProducts().setValue(differencesFromExistingProducts);
	}

	public void setDifferencesFromExistingProductsMetadata(MetadataString differencesFromExistingProducts)
	{
		this.differencesFromExistingProducts = differencesFromExistingProducts;
	}

	public List<AskNatureStrategy> getInspiringStrategies()
	{
		return inspiringStrategies;
	}

  // lazy evaluation:
  public List<AskNatureStrategy> inspiringStrategies()
  {
    if (inspiringStrategies == null)
      inspiringStrategies = new ArrayList<AskNatureStrategy>();
    return inspiringStrategies;
  }

  // addTo:
  public void addToInspiringStrategies(AskNatureStrategy element)
  {
    inspiringStrategies().add(element);
  }

  // size:
  public int inspiringStrategiesSize()
  {
    return inspiringStrategies == null ? 0 : inspiringStrategies.size();
  }

	public void setInspiringStrategies(List<AskNatureStrategy> inspiringStrategies)
	{
		this.inspiringStrategies = inspiringStrategies;
	}

	public MetadataString	biomimicryStory()
	{
		MetadataString	result = this.biomimicryStory;
		if (result == null)
		{
			result = new MetadataString();
			this.biomimicryStory = result;
		}
		return result;
	}

	public String getBiomimicryStory()
	{
		return this.biomimicryStory == null ? null : biomimicryStory().getValue();
	}

	public MetadataString getBiomimicryStoryMetadata()
	{
		return biomimicryStory;
	}

	public void setBiomimicryStory(String biomimicryStory)
	{
		if (biomimicryStory != null)
			this.biomimicryStory().setValue(biomimicryStory);
	}

	public void setBiomimicryStoryMetadata(MetadataString biomimicryStory)
	{
		this.biomimicryStory = biomimicryStory;
	}
}
