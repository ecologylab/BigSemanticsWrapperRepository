package ecologylab.bigsemantics.generated.library;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.ResearchGateInstitution;
import ecologylab.bigsemantics.generated.library.creativeWork.scholarlyArticle.ResearchGateArticle;
import ecologylab.bigsemantics.generated.library.creativeWork.scholarlyArticle.ResearchGateStats;
import ecologylab.bigsemantics.generated.library.person.author.ResearchGateAuthor;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class ResearchGateInstitutionDepartment extends RichDocument
{
	@simpl_composite
	@mm_name("stats")
	private ResearchGateStats stats;

	@simpl_composite
	@mm_name("institution")
	private ResearchGateInstitution institution;

	@simpl_collection("research_gate_article")
	@mm_name("top_articles")
	private List<ResearchGateArticle> topArticles;

	@simpl_collection("research_gate_author")
	@mm_name("top_members")
	private List<ResearchGateAuthor> topMembers;

	@simpl_collection("research_gate_article")
	@mm_name("last_weeks_articles")
	private List<ResearchGateArticle> lastWeeksArticles;

	public ResearchGateInstitutionDepartment()
	{ super(); }

	public ResearchGateInstitutionDepartment(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public ResearchGateStats getStats()
	{
		return stats;
	}

	public void setStats(ResearchGateStats stats)
	{
		this.stats = stats;
	}

	public ResearchGateInstitution getInstitution()
	{
		return institution;
	}

	public void setInstitution(ResearchGateInstitution institution)
	{
		this.institution = institution;
	}

	public List<ResearchGateArticle> getTopArticles()
	{
		return topArticles;
	}

  // lazy evaluation:
  public List<ResearchGateArticle> topArticles()
  {
    if (topArticles == null)
      topArticles = new ArrayList<ResearchGateArticle>();
    return topArticles;
  }

  // addTo:
  public void addToTopArticles(ResearchGateArticle element)
  {
    topArticles().add(element);
  }

  // size:
  public int topArticlesSize()
  {
    return topArticles == null ? 0 : topArticles.size();
  }

	public void setTopArticles(List<ResearchGateArticle> topArticles)
	{
		this.topArticles = topArticles;
	}

	public List<ResearchGateAuthor> getTopMembers()
	{
		return topMembers;
	}

  // lazy evaluation:
  public List<ResearchGateAuthor> topMembers()
  {
    if (topMembers == null)
      topMembers = new ArrayList<ResearchGateAuthor>();
    return topMembers;
  }

  // addTo:
  public void addToTopMembers(ResearchGateAuthor element)
  {
    topMembers().add(element);
  }

  // size:
  public int topMembersSize()
  {
    return topMembers == null ? 0 : topMembers.size();
  }

	public void setTopMembers(List<ResearchGateAuthor> topMembers)
	{
		this.topMembers = topMembers;
	}

	public List<ResearchGateArticle> getLastWeeksArticles()
	{
		return lastWeeksArticles;
	}

  // lazy evaluation:
  public List<ResearchGateArticle> lastWeeksArticles()
  {
    if (lastWeeksArticles == null)
      lastWeeksArticles = new ArrayList<ResearchGateArticle>();
    return lastWeeksArticles;
  }

  // addTo:
  public void addToLastWeeksArticles(ResearchGateArticle element)
  {
    lastWeeksArticles().add(element);
  }

  // size:
  public int lastWeeksArticlesSize()
  {
    return lastWeeksArticles == null ? 0 : lastWeeksArticles.size();
  }

	public void setLastWeeksArticles(List<ResearchGateArticle> lastWeeksArticles)
	{
		this.lastWeeksArticles = lastWeeksArticles;
	}
}
