package ecologylab.bigsemantics.generated.library.search;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataParsedURL;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.net.ParsedURL;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.util.List;
import java.util.Map;

/** 
 *A search result.
 */ 
@simpl_inherit
public class SearchResult extends RichDocument
{
	@simpl_scalar
	private MetadataParsedURL siteLink;

	@simpl_composite
	@mm_name("destination_page")
	private RichDocument destinationPage;

	public SearchResult()
	{ super(); }

	public SearchResult(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataParsedURL	siteLink()
	{
		MetadataParsedURL	result = this.siteLink;
		if (result == null)
		{
			result = new MetadataParsedURL();
			this.siteLink = result;
		}
		return result;
	}

	public ParsedURL getSiteLink()
	{
		return this.siteLink == null ? null : siteLink().getValue();
	}

	public MetadataParsedURL getSiteLinkMetadata()
	{
		return siteLink;
	}

	public void setSiteLink(ParsedURL siteLink)
	{
		if (siteLink != null)
			this.siteLink().setValue(siteLink);
	}

	public void setSiteLinkMetadata(MetadataParsedURL siteLink)
	{
		this.siteLink = siteLink;
	}

	public RichDocument getDestinationPage()
	{
		return destinationPage;
	}

	public void setDestinationPage(RichDocument destinationPage)
	{
		this.destinationPage = destinationPage;
	}
}
