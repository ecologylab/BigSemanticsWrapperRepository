package ecologylab.bigsemantics.generated.library.person.author;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.Instructable;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.person.author.Author;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metadata.scalar.MetadataString;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class InstructableAuthor extends Author
{
	@simpl_scalar
	private MetadataString instructorLocation;

	@simpl_scalar
	private MetadataString joinDate;

	@simpl_scalar
	private MetadataString favoritePercentage;

	@simpl_scalar
	private MetadataString followers;

	@simpl_scalar
	private MetadataString views;

	@simpl_scalar
	private MetadataString bestAnswers;

	@simpl_collection("instructable")
	@mm_name("instructables")
	private List<Instructable> instructables;

	public InstructableAuthor()
	{ super(); }

	public InstructableAuthor(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public MetadataString	instructorLocation()
	{
		MetadataString	result = this.instructorLocation;
		if (result == null)
		{
			result = new MetadataString();
			this.instructorLocation = result;
		}
		return result;
	}

	public String getInstructorLocation()
	{
		return this.instructorLocation == null ? null : instructorLocation().getValue();
	}

	public MetadataString getInstructorLocationMetadata()
	{
		return instructorLocation;
	}

	public void setInstructorLocation(String instructorLocation)
	{
		if (instructorLocation != null)
			this.instructorLocation().setValue(instructorLocation);
	}

	public void setInstructorLocationMetadata(MetadataString instructorLocation)
	{
		this.instructorLocation = instructorLocation;
	}

	public MetadataString	joinDate()
	{
		MetadataString	result = this.joinDate;
		if (result == null)
		{
			result = new MetadataString();
			this.joinDate = result;
		}
		return result;
	}

	public String getJoinDate()
	{
		return this.joinDate == null ? null : joinDate().getValue();
	}

	public MetadataString getJoinDateMetadata()
	{
		return joinDate;
	}

	public void setJoinDate(String joinDate)
	{
		if (joinDate != null)
			this.joinDate().setValue(joinDate);
	}

	public void setJoinDateMetadata(MetadataString joinDate)
	{
		this.joinDate = joinDate;
	}

	public MetadataString	favoritePercentage()
	{
		MetadataString	result = this.favoritePercentage;
		if (result == null)
		{
			result = new MetadataString();
			this.favoritePercentage = result;
		}
		return result;
	}

	public String getFavoritePercentage()
	{
		return this.favoritePercentage == null ? null : favoritePercentage().getValue();
	}

	public MetadataString getFavoritePercentageMetadata()
	{
		return favoritePercentage;
	}

	public void setFavoritePercentage(String favoritePercentage)
	{
		if (favoritePercentage != null)
			this.favoritePercentage().setValue(favoritePercentage);
	}

	public void setFavoritePercentageMetadata(MetadataString favoritePercentage)
	{
		this.favoritePercentage = favoritePercentage;
	}

	public MetadataString	followers()
	{
		MetadataString	result = this.followers;
		if (result == null)
		{
			result = new MetadataString();
			this.followers = result;
		}
		return result;
	}

	public String getFollowers()
	{
		return this.followers == null ? null : followers().getValue();
	}

	public MetadataString getFollowersMetadata()
	{
		return followers;
	}

	public void setFollowers(String followers)
	{
		if (followers != null)
			this.followers().setValue(followers);
	}

	public void setFollowersMetadata(MetadataString followers)
	{
		this.followers = followers;
	}

	public MetadataString	views()
	{
		MetadataString	result = this.views;
		if (result == null)
		{
			result = new MetadataString();
			this.views = result;
		}
		return result;
	}

	public String getViews()
	{
		return this.views == null ? null : views().getValue();
	}

	public MetadataString getViewsMetadata()
	{
		return views;
	}

	public void setViews(String views)
	{
		if (views != null)
			this.views().setValue(views);
	}

	public void setViewsMetadata(MetadataString views)
	{
		this.views = views;
	}

	public MetadataString	bestAnswers()
	{
		MetadataString	result = this.bestAnswers;
		if (result == null)
		{
			result = new MetadataString();
			this.bestAnswers = result;
		}
		return result;
	}

	public String getBestAnswers()
	{
		return this.bestAnswers == null ? null : bestAnswers().getValue();
	}

	public MetadataString getBestAnswersMetadata()
	{
		return bestAnswers;
	}

	public void setBestAnswers(String bestAnswers)
	{
		if (bestAnswers != null)
			this.bestAnswers().setValue(bestAnswers);
	}

	public void setBestAnswersMetadata(MetadataString bestAnswers)
	{
		this.bestAnswers = bestAnswers;
	}

	public List<Instructable> getInstructables()
	{
		return instructables;
	}

  // lazy evaluation:
  public List<Instructable> instructables()
  {
    if (instructables == null)
      instructables = new ArrayList<Instructable>();
    return instructables;
  }

  // addTo:
  public void addToInstructables(Instructable element)
  {
    instructables().add(element);
  }

  // size:
  public int instructablesSize()
  {
    return instructables == null ? 0 : instructables.size();
  }

	public void setInstructables(List<Instructable> instructables)
	{
		this.instructables = instructables;
	}
}
