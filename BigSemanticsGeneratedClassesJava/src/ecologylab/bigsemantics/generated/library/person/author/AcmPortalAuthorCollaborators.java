package ecologylab.bigsemantics.generated.library.person.author;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.person.author.AcmPortalAuthor;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class AcmPortalAuthorCollaborators extends RichDocument
{
	@simpl_collection("acm_portal_author")
	@mm_name("collaborators")
	private List<AcmPortalAuthor> collaborators;

	public AcmPortalAuthorCollaborators()
	{ super(); }

	public AcmPortalAuthorCollaborators(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<AcmPortalAuthor> getCollaborators()
	{
		return collaborators;
	}

  // lazy evaluation:
  public List<AcmPortalAuthor> collaborators()
  {
    if (collaborators == null)
      collaborators = new ArrayList<AcmPortalAuthor>();
    return collaborators;
  }

  // addTo:
  public void addToCollaborators(AcmPortalAuthor element)
  {
    collaborators().add(element);
  }

  // size:
  public int collaboratorsSize()
  {
    return collaborators == null ? 0 : collaborators.size();
  }

	public void setCollaborators(List<AcmPortalAuthor> collaborators)
	{
		this.collaborators = collaborators;
	}
}
