package ecologylab.bigsemantics.generated.library.person.author;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.artwork.GettyObject;
import ecologylab.bigsemantics.generated.library.person.author.Artist;
import ecologylab.bigsemantics.generated.library.person.author.GettyArtistInfo;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class GettyArtist extends Artist
{
	@simpl_collection("getty_object")
	@mm_name("works")
	private List<GettyObject> works;

	@simpl_composite
	@mm_name("artist_info")
	private GettyArtistInfo artistInfo;

	public GettyArtist()
	{ super(); }

	public GettyArtist(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<GettyObject> getWorks()
	{
		return works;
	}

  // lazy evaluation:
  public List<GettyObject> works()
  {
    if (works == null)
      works = new ArrayList<GettyObject>();
    return works;
  }

  // addTo:
  public void addToWorks(GettyObject element)
  {
    works().add(element);
  }

  // size:
  public int worksSize()
  {
    return works == null ? 0 : works.size();
  }

	public void setWorks(List<GettyObject> works)
	{
		this.works = works;
	}

	public GettyArtistInfo getArtistInfo()
	{
		return artistInfo;
	}

	public void setArtistInfo(GettyArtistInfo artistInfo)
	{
		this.artistInfo = artistInfo;
	}
}
