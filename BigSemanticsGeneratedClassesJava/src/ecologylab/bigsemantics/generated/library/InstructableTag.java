package ecologylab.bigsemantics.generated.library;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2017) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.Instructable;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class InstructableTag extends RichDocument
{
	@simpl_collection("instructable")
	@mm_name("items_with_tag")
	private List<Instructable> itemsWithTag;

	public InstructableTag()
	{ super(); }

	public InstructableTag(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<Instructable> getItemsWithTag()
	{
		return itemsWithTag;
	}

  // lazy evaluation:
  public List<Instructable> itemsWithTag()
  {
    if (itemsWithTag == null)
      itemsWithTag = new ArrayList<Instructable>();
    return itemsWithTag;
  }

  // addTo:
  public void addToItemsWithTag(Instructable element)
  {
    itemsWithTag().add(element);
  }

  // size:
  public int itemsWithTagSize()
  {
    return itemsWithTag == null ? 0 : itemsWithTag.size();
  }

	public void setItemsWithTag(List<Instructable> itemsWithTag)
	{
		this.itemsWithTag = itemsWithTag;
	}
}
