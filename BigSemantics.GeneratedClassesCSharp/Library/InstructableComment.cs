//
// InstructableComment.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library;
using Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library 
{
	[SimplInherit]
	public class InstructableComment : RichDocument
	{
		[SimplComposite]
		[MmName("comment_author")]
		private InstructableAuthor commentAuthor;

		[SimplComposite]
		[MmName("in_response_to")]
		private InstructableAuthor inResponseTo;

		[SimplComposite]
		[MmName("reply")]
		private InstructableComment reply;

		public InstructableComment()
		{ }

		public InstructableComment(MetaMetadataCompositeField mmd) : base(mmd) { }


		public InstructableAuthor CommentAuthor
		{
			get{return commentAuthor;}
			set
			{
				if (this.commentAuthor != value)
				{
					this.commentAuthor = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public InstructableAuthor InResponseTo
		{
			get{return inResponseTo;}
			set
			{
				if (this.inResponseTo != value)
				{
					this.inResponseTo = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public InstructableComment Reply
		{
			get{return reply;}
			set
			{
				if (this.reply != value)
				{
					this.reply = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
