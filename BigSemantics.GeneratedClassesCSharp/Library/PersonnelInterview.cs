//
// PersonnelInterview.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library 
{
	/// <summary>
	/// personnel interview
	/// </summary>
	[SimplInherit]
	public class PersonnelInterview : RichDocument
	{
		[SimplScalar]
		private MetadataString role;

		[SimplCollection("video_interview")]
		[MmName("speaks_on")]
		private List<VideoInterview> speaksOn;

		[SimplCollection("video_interview")]
		[MmName("interview_segments")]
		private List<VideoInterview> interviewSegments;

		public PersonnelInterview()
		{ }

		public PersonnelInterview(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Role
		{
			get{return role;}
			set
			{
				if (this.role != value)
				{
					this.role = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<VideoInterview> SpeaksOn
		{
			get{return speaksOn;}
			set
			{
				if (this.speaksOn != value)
				{
					this.speaksOn = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<VideoInterview> InterviewSegments
		{
			get{return interviewSegments;}
			set
			{
				if (this.interviewSegments != value)
				{
					this.interviewSegments = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
