//
// WikipediaPage.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.WikipediaPageNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.WikipediaPageNS 
{
	/// <summary>
	/// An article on wikipedia
	/// </summary>
	[SimplInherit]
	public class WikipediaPage : RichDocument
	{
		[SimplCollection("section")]
		[MmName("sections")]
		private List<Section> sections;

		[SimplCollection("image")]
		[MmName("thumbinners")]
		private List<Image> thumbinners;

		[SimplCollection("wikipedia_category")]
		[MmName("categories")]
		private List<WikipediaCategory> categories;

		public WikipediaPage()
		{ }

		public WikipediaPage(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<Section> Sections
		{
			get{return sections;}
			set
			{
				if (this.sections != value)
				{
					this.sections = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Image> Thumbinners
		{
			get{return thumbinners;}
			set
			{
				if (this.thumbinners != value)
				{
					this.thumbinners = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<WikipediaCategory> Categories
		{
			get{return categories;}
			set
			{
				if (this.categories != value)
				{
					this.categories = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
