//
// Section.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.WikipediaPageNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.WikipediaPageNS 
{
	[SimplInherit]
	public class Section : Metadata
	{
		[SimplScalar]
		private MetadataString title;

		[SimplCollection("paragraph")]
		[MmName("paragraphs")]
		private List<Paragraph> paragraphs;

		[SimplCollection("section")]
		[MmName("subsections")]
		private List<Section> subsections;

		public Section()
		{ }

		public Section(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Title
		{
			get{return title;}
			set
			{
				if (this.title != value)
				{
					this.title = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Paragraph> Paragraphs
		{
			get{return paragraphs;}
			set
			{
				if (this.paragraphs != value)
				{
					this.paragraphs = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Section> Subsections
		{
			get{return subsections;}
			set
			{
				if (this.subsections != value)
				{
					this.subsections = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
