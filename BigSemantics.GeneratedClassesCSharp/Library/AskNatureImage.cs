//
// AskNatureImage.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library 
{
	[SimplInherit]
	public class AskNatureImage : RichDocument
	{
		[SimplScalar]
		private MetadataString photographerOrArtist;

		[SimplComposite]
		[MmName("image_source")]
		private RichDocument imageSource;

		[SimplComposite]
		[MmName("link_to_strategy")]
		private AskNatureStrategy linkToStrategy;

		public AskNatureImage()
		{ }

		public AskNatureImage(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString PhotographerOrArtist
		{
			get{return photographerOrArtist;}
			set
			{
				if (this.photographerOrArtist != value)
				{
					this.photographerOrArtist = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public RichDocument ImageSource
		{
			get{return imageSource;}
			set
			{
				if (this.imageSource != value)
				{
					this.imageSource = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public AskNatureStrategy LinkToStrategy
		{
			get{return linkToStrategy;}
			set
			{
				if (this.linkToStrategy != value)
				{
					this.linkToStrategy = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
