//
// CachedHtml.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.PrimitivesNS 
{
	/// <summary>
	/// The data structure for cached HTML pages.
	/// </summary>
	[SimplInherit]
	public class CachedHtml : Document
	{
		[SimplScalar]
		private MetadataString userAgent;

		[SimplScalar]
		private MetadataDate accessTime;

		[SimplScalar]
		private MetadataInteger httpResponseCode;

		[SimplScalar]
		private MetadataString httpResponseMessage;

		[SimplScalar]
		private MetadataString mimeType;

		/// <summary>
		/// UTF8 encoded.
		/// </summary>
		[SimplScalar]
		private MetadataString content;

		[SimplScalar]
		private MetadataString parser;

		public CachedHtml()
		{ }

		public CachedHtml(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString UserAgent
		{
			get{return userAgent;}
			set
			{
				if (this.userAgent != value)
				{
					this.userAgent = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataDate AccessTime
		{
			get{return accessTime;}
			set
			{
				if (this.accessTime != value)
				{
					this.accessTime = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataInteger HttpResponseCode
		{
			get{return httpResponseCode;}
			set
			{
				if (this.httpResponseCode != value)
				{
					this.httpResponseCode = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString HttpResponseMessage
		{
			get{return httpResponseMessage;}
			set
			{
				if (this.httpResponseMessage != value)
				{
					this.httpResponseMessage = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString MimeType
		{
			get{return mimeType;}
			set
			{
				if (this.mimeType != value)
				{
					this.mimeType = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Content
		{
			get{return content;}
			set
			{
				if (this.content != value)
				{
					this.content = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Parser
		{
			get{return parser;}
			set
			{
				if (this.parser != value)
				{
					this.parser = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
