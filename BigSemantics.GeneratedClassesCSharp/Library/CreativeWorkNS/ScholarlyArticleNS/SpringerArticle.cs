//
// SpringerArticle.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.PublicationNS;
using Ecologylab.BigSemantics.Generated.Library.SearchNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.ScholarlyArticleNS 
{
	/// <summary>
	/// An article or any other text heavy component in Springer Link.
	/// </summary>
	[SimplInherit]
	public class SpringerArticle : SpringerBook
	{
		[SimplScalar]
		private MetadataString onlineDate;

		[SimplCollection("author_affiliation")]
		[MmName("author_affiliations")]
		private List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> authorAffiliations;

		[SimplComposite]
		[MmName("publication_title")]
		private SpringerBook publicationTitle;

		[SimplComposite]
		[MmName("series_title")]
		private SpringerSearch seriesTitle;

		[SimplCollection("rich_document")]
		[MmName("industry_sectors")]
		private List<RichDocument> industrySectors;

		public SpringerArticle()
		{ }

		public SpringerArticle(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString OnlineDate
		{
			get{return onlineDate;}
			set
			{
				if (this.onlineDate != value)
				{
					this.onlineDate = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> AuthorAffiliations
		{
			get{return authorAffiliations;}
			set
			{
				if (this.authorAffiliations != value)
				{
					this.authorAffiliations = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public SpringerBook PublicationTitle
		{
			get{return publicationTitle;}
			set
			{
				if (this.publicationTitle != value)
				{
					this.publicationTitle = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public SpringerSearch SeriesTitle
		{
			get{return seriesTitle;}
			set
			{
				if (this.seriesTitle != value)
				{
					this.seriesTitle = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<RichDocument> IndustrySectors
		{
			get{return industrySectors;}
			set
			{
				if (this.industrySectors != value)
				{
					this.industrySectors = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
