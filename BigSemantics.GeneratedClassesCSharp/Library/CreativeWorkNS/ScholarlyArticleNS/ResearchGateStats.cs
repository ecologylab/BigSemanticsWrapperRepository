//
// ResearchGateStats.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.ScholarlyArticleNS 
{
	[SimplInherit]
	public class ResearchGateStats : RichDocument
	{
		[SimplScalar]
		private MetadataString publicationCount;

		[SimplScalar]
		private MetadataString views;

		[SimplScalar]
		private MetadataString downloads;

		[SimplScalar]
		private MetadataString citations;

		[SimplScalar]
		private MetadataString impactPoints;

		[SimplScalar]
		private MetadataString avgImpactPoints;

		[SimplScalar]
		private MetadataString memberCount;

		[SimplScalar]
		private MetadataString rgScore;

		public ResearchGateStats()
		{ }

		public ResearchGateStats(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString PublicationCount
		{
			get{return publicationCount;}
			set
			{
				if (this.publicationCount != value)
				{
					this.publicationCount = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Views
		{
			get{return views;}
			set
			{
				if (this.views != value)
				{
					this.views = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Downloads
		{
			get{return downloads;}
			set
			{
				if (this.downloads != value)
				{
					this.downloads = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Citations
		{
			get{return citations;}
			set
			{
				if (this.citations != value)
				{
					this.citations = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString ImpactPoints
		{
			get{return impactPoints;}
			set
			{
				if (this.impactPoints != value)
				{
					this.impactPoints = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString AvgImpactPoints
		{
			get{return avgImpactPoints;}
			set
			{
				if (this.avgImpactPoints != value)
				{
					this.avgImpactPoints = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString MemberCount
		{
			get{return memberCount;}
			set
			{
				if (this.memberCount != value)
				{
					this.memberCount = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString RgScore
		{
			get{return rgScore;}
			set
			{
				if (this.rgScore != value)
				{
					this.rgScore = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
