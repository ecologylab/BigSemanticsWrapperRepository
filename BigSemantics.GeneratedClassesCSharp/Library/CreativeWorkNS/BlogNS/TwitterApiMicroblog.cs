//
// TwitterApiMicroblog.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.BlogNS;
using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.BlogPostNS;
using Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.BlogNS 
{
	[SimplInherit]
	public class TwitterApiMicroblog : Blog
	{
		[SimplScalar]
		private MetadataString username;

		[SimplCollection("tweeter")]
		[MmName("tweeters")]
		private List<Tweeter> tweeters;

		[SimplCollection("tweet")]
		[MmName("tweets")]
		private List<Tweet> tweets;

		public TwitterApiMicroblog()
		{ }

		public TwitterApiMicroblog(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Username
		{
			get{return username;}
			set
			{
				if (this.username != value)
				{
					this.username = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Tweeter> Tweeters
		{
			get{return tweeters;}
			set
			{
				if (this.tweeters != value)
				{
					this.tweeters = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Tweet> Tweets
		{
			get{return tweets;}
			set
			{
				if (this.tweets != value)
				{
					this.tweets = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
