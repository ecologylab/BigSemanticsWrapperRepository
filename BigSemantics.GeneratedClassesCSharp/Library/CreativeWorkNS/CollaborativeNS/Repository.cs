//
// Repository.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.CollaborativeNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.CollaborativeNS 
{
	[SimplInherit]
	public class Repository : RichDocument
	{
		[SimplScalar]
		private MetadataString numberOfCommits;

		[SimplScalar]
		private MetadataString numberOfBranches;

		[SimplScalar]
		private MetadataString numberOfReleases;

		[SimplScalar]
		private MetadataString numberOfContributors;

		[SimplScalar]
		private MetadataString numberOfIssues;

		[SimplScalar]
		private MetadataString numberOfPullRequests;

		[SimplComposite]
		[MmName("latest_commit")]
		private Commit latestCommit;

		[SimplComposite]
		[MmName("commits_source")]
		private CommitsPage commitsSource;

		[SimplCollection("file_source_item")]
		[MmName("files")]
		private List<FileSourceItem> files;

		[SimplCollection("repo_tab_section")]
		[MmName("repo_tabs")]
		private List<RepoTabSection> repoTabs;

		public Repository()
		{ }

		public Repository(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString NumberOfCommits
		{
			get{return numberOfCommits;}
			set
			{
				if (this.numberOfCommits != value)
				{
					this.numberOfCommits = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString NumberOfBranches
		{
			get{return numberOfBranches;}
			set
			{
				if (this.numberOfBranches != value)
				{
					this.numberOfBranches = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString NumberOfReleases
		{
			get{return numberOfReleases;}
			set
			{
				if (this.numberOfReleases != value)
				{
					this.numberOfReleases = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString NumberOfContributors
		{
			get{return numberOfContributors;}
			set
			{
				if (this.numberOfContributors != value)
				{
					this.numberOfContributors = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString NumberOfIssues
		{
			get{return numberOfIssues;}
			set
			{
				if (this.numberOfIssues != value)
				{
					this.numberOfIssues = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString NumberOfPullRequests
		{
			get{return numberOfPullRequests;}
			set
			{
				if (this.numberOfPullRequests != value)
				{
					this.numberOfPullRequests = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public Commit LatestCommit
		{
			get{return latestCommit;}
			set
			{
				if (this.latestCommit != value)
				{
					this.latestCommit = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public CommitsPage CommitsSource
		{
			get{return commitsSource;}
			set
			{
				if (this.commitsSource != value)
				{
					this.commitsSource = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<FileSourceItem> Files
		{
			get{return files;}
			set
			{
				if (this.files != value)
				{
					this.files = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<RepoTabSection> RepoTabs
		{
			get{return repoTabs;}
			set
			{
				if (this.repoTabs != value)
				{
					this.repoTabs = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
