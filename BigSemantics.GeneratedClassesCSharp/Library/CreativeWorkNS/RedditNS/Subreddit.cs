//
// Subreddit.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.BlogNS;
using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.RedditNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.RedditNS 
{
	[SimplInherit]
	public class Subreddit : Blog
	{
		[SimplScalar]
		private MetadataString subscribers;

		[SimplCollection("reddit_post_data")]
		[MmName("post")]
		private List<RedditPostData> post;

		public Subreddit()
		{ }

		public Subreddit(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Subscribers
		{
			get{return subscribers;}
			set
			{
				if (this.subscribers != value)
				{
					this.subscribers = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<RedditPostData> Post
		{
			get{return post;}
			set
			{
				if (this.post != value)
				{
					this.post = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
