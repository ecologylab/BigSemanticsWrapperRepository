//
// GoogleScholarSearchResult.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.SearchNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.SearchNS 
{
	/// <summary>
	/// A google scholar search result
	/// </summary>
	[SimplInherit]
	public class GoogleScholarSearchResult : RichDocument
	{
		[SimplComposite]
		[MmName("destination_page")]
		private RichDocument destinationPage;

		[SimplScalar]
		private MetadataString destinationType;

		[SimplScalar]
		private MetadataString sourceInfo;

		[SimplCollection("rich_document")]
		[MmName("google_authors")]
		private List<RichDocument> googleAuthors;

		[SimplScalar]
		private MetadataInteger citationCount;

		[SimplComposite]
		[MmName("citations_page")]
		private GoogleScholarSearch citationsPage;

		[SimplComposite]
		[MmName("related_articles_page")]
		private GoogleScholarSearch relatedArticlesPage;

		[SimplScalar]
		private MetadataInteger versionCount;

		[SimplComposite]
		[MmName("versions_page")]
		private GoogleScholarSearch versionsPage;

		public GoogleScholarSearchResult()
		{ }

		public GoogleScholarSearchResult(MetaMetadataCompositeField mmd) : base(mmd) { }


		public RichDocument DestinationPage
		{
			get{return destinationPage;}
			set
			{
				if (this.destinationPage != value)
				{
					this.destinationPage = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString DestinationType
		{
			get{return destinationType;}
			set
			{
				if (this.destinationType != value)
				{
					this.destinationType = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString SourceInfo
		{
			get{return sourceInfo;}
			set
			{
				if (this.sourceInfo != value)
				{
					this.sourceInfo = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<RichDocument> GoogleAuthors
		{
			get{return googleAuthors;}
			set
			{
				if (this.googleAuthors != value)
				{
					this.googleAuthors = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataInteger CitationCount
		{
			get{return citationCount;}
			set
			{
				if (this.citationCount != value)
				{
					this.citationCount = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public GoogleScholarSearch CitationsPage
		{
			get{return citationsPage;}
			set
			{
				if (this.citationsPage != value)
				{
					this.citationsPage = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public GoogleScholarSearch RelatedArticlesPage
		{
			get{return relatedArticlesPage;}
			set
			{
				if (this.relatedArticlesPage != value)
				{
					this.relatedArticlesPage = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataInteger VersionCount
		{
			get{return versionCount;}
			set
			{
				if (this.versionCount != value)
				{
					this.versionCount = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public GoogleScholarSearch VersionsPage
		{
			get{return versionsPage;}
			set
			{
				if (this.versionsPage != value)
				{
					this.versionsPage = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
