//
// AcmPortalSearchResult.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.SearchNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.SearchNS 
{
	[SimplInherit]
	public class AcmPortalSearchResult : SearchResult
	{
		[SimplScalar]
		private MetadataString authorList;

		[SimplScalar]
		private MetadataString source;

		[SimplScalar]
		private MetadataString bibliometrics;

		public AcmPortalSearchResult()
		{ }

		public AcmPortalSearchResult(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString AuthorList
		{
			get{return authorList;}
			set
			{
				if (this.authorList != value)
				{
					this.authorList = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Source
		{
			get{return source;}
			set
			{
				if (this.source != value)
				{
					this.source = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Bibliometrics
		{
			get{return bibliometrics;}
			set
			{
				if (this.bibliometrics != value)
				{
					this.bibliometrics = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
