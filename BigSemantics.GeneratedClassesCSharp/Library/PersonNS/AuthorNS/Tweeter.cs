//
// Tweeter.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Builtins.PersonNS.AuthorNS;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS 
{
	/// <summary>
	/// an author of twitter microblog
	/// </summary>
	[SimplInherit]
	public class Tweeter : Author
	{
		[SimplScalar]
		private MetadataInteger numTweets;

		[SimplScalar]
		private MetadataInteger numFollowing;

		[SimplScalar]
		private MetadataInteger numFollowers;

		public Tweeter()
		{ }

		public Tweeter(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataInteger NumTweets
		{
			get{return numTweets;}
			set
			{
				if (this.numTweets != value)
				{
					this.numTweets = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataInteger NumFollowing
		{
			get{return numFollowing;}
			set
			{
				if (this.numFollowing != value)
				{
					this.numFollowing = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataInteger NumFollowers
		{
			get{return numFollowers;}
			set
			{
				if (this.numFollowers != value)
				{
					this.numFollowers = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
