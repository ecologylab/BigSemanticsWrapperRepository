//
// GoogleScholarAuthor.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Builtins.PersonNS.AuthorNS;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS 
{
	[SimplInherit]
	public class GoogleScholarAuthor : Author
	{
		[SimplCollection("rich_document")]
		[MmName("interests")]
		private List<RichDocument> interests;

		[SimplComposite]
		[MmName("homepage")]
		private RichDocument homepage;

		[SimplCollection("rich_document")]
		[MmName("top_coauthors")]
		private List<RichDocument> topCoauthors;

		[SimplCollection("rich_document")]
		[MmName("papers")]
		private List<RichDocument> papers;

		public GoogleScholarAuthor()
		{ }

		public GoogleScholarAuthor(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<RichDocument> Interests
		{
			get{return interests;}
			set
			{
				if (this.interests != value)
				{
					this.interests = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public RichDocument Homepage
		{
			get{return homepage;}
			set
			{
				if (this.homepage != value)
				{
					this.homepage = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<RichDocument> TopCoauthors
		{
			get{return topCoauthors;}
			set
			{
				if (this.topCoauthors != value)
				{
					this.topCoauthors = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<RichDocument> Papers
		{
			get{return papers;}
			set
			{
				if (this.papers != value)
				{
					this.papers = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
