//
// GettyArtist.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS.ArtworkNS;
using Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS 
{
	[SimplInherit]
	public class GettyArtist : Artist
	{
		[SimplCollection("getty_object")]
		[MmName("works")]
		private List<GettyObject> works;

		[SimplComposite]
		[MmName("artist_info")]
		private GettyArtistInfo artistInfo;

		public GettyArtist()
		{ }

		public GettyArtist(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<GettyObject> Works
		{
			get{return works;}
			set
			{
				if (this.works != value)
				{
					this.works = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public GettyArtistInfo ArtistInfo
		{
			get{return artistInfo;}
			set
			{
				if (this.artistInfo != value)
				{
					this.artistInfo = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
