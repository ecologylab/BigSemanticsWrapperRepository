//
// FacebookUser.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.PersonNS.AuthorNS 
{
	/// <summary>
	/// an author of facebook microblog
	/// </summary>
	[SimplInherit]
	public class FacebookUser : SocialMediaUser
	{
		[SimplScalar]
		private MetadataString worked;

		[SimplScalar]
		private MetadataString studied;

		[SimplCollection("friend_stat")]
		[MmName("friend_stats")]
		private List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> friendStats;

		public FacebookUser()
		{ }

		public FacebookUser(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Worked
		{
			get{return worked;}
			set
			{
				if (this.worked != value)
				{
					this.worked = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Studied
		{
			get{return studied;}
			set
			{
				if (this.studied != value)
				{
					this.studied = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> FriendStats
		{
			get{return friendStats;}
			set
			{
				if (this.friendStats != value)
				{
					this.friendStats = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
