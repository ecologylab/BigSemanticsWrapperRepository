//
// MoviePerson.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library.CreativeWorkNS;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Builtins.PersonNS;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library.PersonNS 
{
	[SimplInherit]
	public class MoviePerson : Person
	{
		/// <summary>
		/// Movies directed by this person.
		/// </summary>
		[SimplCollection("movie")]
		[MmName("movies_directed")]
		private List<Movie> moviesDirected;

		/// <summary>
		/// Movies written by this person.
		/// </summary>
		[SimplCollection("movie")]
		[MmName("movies_written")]
		private List<Movie> moviesWritten;

		/// <summary>
		/// Movies this person acted in.
		/// </summary>
		[SimplCollection("movie")]
		[MmName("movies_acted_in")]
		private List<Movie> moviesActedIn;

		/// <summary>
		/// Movies related to this person.
		/// </summary>
		[SimplCollection("movie")]
		[MmName("movies")]
		private List<Movie> movies;

		/// <summary>
		/// The awards this person has won.
		/// </summary>
		[SimplCollection("award")]
		[MmName("awards")]
		private List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> awards;

		[SimplScalar]
		private MetadataString role;

		[SimplScalar]
		private MetadataString rating;

		public MoviePerson()
		{ }

		public MoviePerson(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<Movie> MoviesDirected
		{
			get{return moviesDirected;}
			set
			{
				if (this.moviesDirected != value)
				{
					this.moviesDirected = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Movie> MoviesWritten
		{
			get{return moviesWritten;}
			set
			{
				if (this.moviesWritten != value)
				{
					this.moviesWritten = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Movie> MoviesActedIn
		{
			get{return moviesActedIn;}
			set
			{
				if (this.moviesActedIn != value)
				{
					this.moviesActedIn = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Movie> Movies
		{
			get{return movies;}
			set
			{
				if (this.movies != value)
				{
					this.movies = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> Awards
		{
			get{return awards;}
			set
			{
				if (this.awards != value)
				{
					this.awards = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Role
		{
			get{return role;}
			set
			{
				if (this.role != value)
				{
					this.role = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Rating
		{
			get{return rating;}
			set
			{
				if (this.rating != value)
				{
					this.rating = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
