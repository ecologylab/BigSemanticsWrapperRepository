//
// PdfMixin.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2017 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library 
{
	/// <summary>
	/// For metadata fields extracted by the PDF parser
	/// </summary>
	[SimplInherit]
	public class PdfMixin : Metadata
	{
		/// <summary>
		/// The author of the pdf document
		/// </summary>
		[SimplScalar]
		private MetadataString author;

		/// <summary>
		/// Summary of the pdf document
		/// </summary>
		[SimplScalar]
		private MetadataString summary;

		/// <summary>
		/// Key Words of the document
		/// </summary>
		[SimplScalar]
		private MetadataString pdfKeywordsString;

		/// <summary>
		/// Subject of the document
		/// </summary>
		[SimplScalar]
		private MetadataString subject;

		[SimplScalar]
		private MetadataString trapped;

		[SimplScalar]
		private MetadataString modified;

		/// <summary>
		/// Contents of the document
		/// </summary>
		[SimplScalar]
		private MetadataString contents;

		/// <summary>
		/// Creation date of the document
		/// </summary>
		[SimplScalar]
		private MetadataString creationdate;

		public PdfMixin()
		{ }

		public PdfMixin(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Author
		{
			get{return author;}
			set
			{
				if (this.author != value)
				{
					this.author = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Summary
		{
			get{return summary;}
			set
			{
				if (this.summary != value)
				{
					this.summary = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString PdfKeywordsString
		{
			get{return pdfKeywordsString;}
			set
			{
				if (this.pdfKeywordsString != value)
				{
					this.pdfKeywordsString = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Subject
		{
			get{return subject;}
			set
			{
				if (this.subject != value)
				{
					this.subject = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Trapped
		{
			get{return trapped;}
			set
			{
				if (this.trapped != value)
				{
					this.trapped = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Modified
		{
			get{return modified;}
			set
			{
				if (this.modified != value)
				{
					this.modified = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Contents
		{
			get{return contents;}
			set
			{
				if (this.contents != value)
				{
					this.contents = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Creationdate
		{
			get{return creationdate;}
			set
			{
				if (this.creationdate != value)
				{
					this.creationdate = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
